https://leetcode.com/problems/remove-nth-node-from-end-of-list/

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        if head.next == None:
            return None
        ptr = head
        ptr2 = head 
        lag = 0
        size = 0
        while ptr.next != None:
            #print ptr.val
            size += 1
            ptr=ptr.next
            if lag != n+0:
                lag+=1
            else:
                ptr2=ptr2.next
        
        if size==1:
            if n == 1:
                head.next=None
                return head
            
            elif n == 2:
                head=head.next
                return head
            
        # first more than 2 node
        if ptr2 == head and size>=2 and size-n != 0:
            head=head.next
            return head
        
        
        ptr2.next=ptr2.next.next
        return head
